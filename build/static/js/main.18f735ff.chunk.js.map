{"version":3,"sources":["components/Contacts.js","components/Header.js","components/Filter.js","components/Form.js","services/contactServices.js","components/Message.js","App.js","index.js"],"names":["Contacts","contactList","personfilter","deleteService","console","log","contactListFiltered","filter","contact","name","toLowerCase","includes","map","i","key","number","onClick","window","confirm","id","Header","text","Filter","handleChange","value","onChange","Form","handleSubmit","handleNameChange","handleNumberChange","onSubmit","type","baseUrl","getContacts","axios","get","then","response","data","deleteContact","idToDelete","a","delete","catch","error","deleteSuccess","updatedContacts","updateContactNumber","nameToUpdate","newNumber","contacts","contactToFind","find","patch","createContact","newnName","findResult","findIndex","post","Message","textToDisplay","redText","undefined","className","App","useState","persons","setPersons","newFilter","setNewFilter","newName","setNewName","setnewNumber","errorMessage","setErrorMessage","redErrorText","setRedErrorText","useEffect","contactService","changeMessage","setTimeout","event","target","preventDefault","retVal","slice","newContacts","person","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18f735ff.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Contacts = ({contactList, personfilter, deleteService}) => {\r\n    console.log('contactList :>> ', contactList);\r\n    const contactListFiltered = contactList.filter( contact => contact.name.toLowerCase().includes(personfilter.toLowerCase()) )\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                contactListFiltered.map((contact, i) => {\r\n                    return (\r\n                        <div key={contact.name}>\r\n                            {contact.name +' '+ contact.number} \r\n                            <button onClick = {() => {\r\n                                    const result = window.confirm(`Do you really want to delete ${contact.name}`);\r\n                                    if(result){\r\n                                        deleteService(contact.id);\r\n                                    }\r\n                                } }>\r\n                                delete\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contacts","import React from 'react'\r\n\r\nconst Header = ({text}) => {\r\n    return <>\r\n        <h2>{text}</h2>\r\n    </>\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Filter = ({filter, handleChange}) => {\r\n    return <div>\r\n        filter shown with: <input value={filter} onChange = {handleChange} />\r\n    </div>\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Form = ({ handleSubmit, name, handleNameChange, number, handleNumberChange}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n\r\n        <div>\r\n            name: <input value={name} onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n            number: <input value={number} onChange={handleNumberChange} />\r\n        </div>\r\n\r\n        <div>\r\n            <button type=\"submit\" >\r\n                add\r\n            </button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default Form","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getContacts = () => {\r\n    return axios.get(baseUrl)\r\n        .then(response => response.data)\r\n}\r\n\r\nconst createContact = (newnName, newNumber) => {\r\n    const retVal = getContacts().then(contacts => {\r\n        const findResult = contacts.map(contact => contact.name).findIndex(name => name === newnName);\r\n        console.log('findResult :>> ', findResult);\r\n        if (findResult === -1) {\r\n            axios.post(baseUrl, { name: newnName, number: newNumber });\r\n            return 0;\r\n        } else {\r\n            return 1;\r\n        }\r\n    })\r\n\r\n    return retVal;\r\n}\r\n\r\nconst deleteContact = async (idToDelete) => {\r\n    console.log('id to delete :>> ', idToDelete);\r\n    const deleteSuccess = await axios.delete(`${baseUrl}/${idToDelete}`)\r\n        .then(() => { return 0} )\r\n        .catch( error => {\r\n            console.log('error :>> ', error);\r\n            return 1;\r\n        })\r\n\r\n    return getContacts().then(updatedContacts => {return {updatedContacts:updatedContacts, error: deleteSuccess}})\r\n}\r\n\r\nconst updateContactNumber = async (nameToUpdate, newNumber) => {\r\n    console.log('name to update :>> ', nameToUpdate);\r\n    await getContacts().then( async contacts => {\r\n        const contactToFind = contacts.find(contact => contact.name === nameToUpdate);\r\n        await axios.patch(`${baseUrl}/${contactToFind.id}`, {number: newNumber});\r\n    })\r\n\r\n    return getContacts().then(updatedContacts => {return updatedContacts})\r\n}\r\n\r\nexport default {getContacts, createContact, deleteContact, updateContactNumber}","import React from 'react';\r\n\r\nconst Message = ({textToDisplay, redText }) => {\r\n    if(textToDisplay===null | textToDisplay === undefined){\r\n        return <div className = \"none\"> </div>\r\n    }\r\n    \r\n    if(redText === true){\r\n        return(\r\n            <div className = {'errMsgTrue'}>\r\n             {textToDisplay}\r\n            </div> \r\n        )\r\n    } else {\r\n        return (\r\n            <div className = {'errMsg'}>\r\n                {textToDisplay}\r\n            </div> \r\n            )\r\n    }\r\n}\r\n\r\nexport default Message","import React, { useState, useEffect } from 'react'\n//import axios from 'axios'\nimport Contacts from './components/Contacts'\nimport Header from './components/Header'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport contactService from './services/contactServices'\nimport Message from './components/Message'\n\nconst App = () => {\n  const [persons, setPersons] = useState(\n    [\n      // { name: 'Arto Hellas', number: '040-123456' },\n      // { name: 'Ada Lovelace', number: '39-44-5323523' },\n      // { name: 'Dan Abramov', number: '12-43-234345' },\n      // { name: 'Mary Poppendieck', number: '39-23-6423122' }\n    ]\n  ) \n\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setnewNumber ] = useState('')\n  const [ errorMessage, setErrorMessage] = useState(null)\n  const [ redErrorText, setRedErrorText] = useState(false)\n\n  const hook = () => {\n    console.log('Effect');\n    contactService.getContacts()\n      .then(contacts => setPersons(contacts) );\n  }\n\n  useEffect( hook ,[] )\n\n  const changeMessage = async(text, redText) => {\n    console.log('Error message display');\n    if(redText){ setRedErrorText(true) }\n    setErrorMessage(text);\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 1200);\n    if( redErrorText ) { setRedErrorText(false) }\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    //console.log('currValue : ', event.target.value);\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setnewNumber(event.target.value);\n  }\n\n  const handleSubmit= (event) =>{\n    event.preventDefault();\n\n    const retVal = contactService.createContact(newName, newNumber);\n  \n    retVal.then(retVal => {\n      if( retVal===0 ){\n        console.log('New contact added');\n        contactService.getContacts().then(contacts => setPersons(contacts) ); \n        changeMessage('New contact added') \n      } else {\n        const confirm = window.confirm( `${newName} is already added to phonebook.\\nDo you want to update new number to existing contact` );\n        if(confirm){\n          console.log('old contacts :>> ', persons);\n          contactService.updateContactNumber(newName, newNumber)\n            .then(updatedContacts => setPersons(updatedContacts))\n            .then( () => changeMessage('Contact number changed') );\n          console.log('new contacts :>> ', persons);\n        }\n      }\n    })\n  }\n\n  const handleDelete = (id) => {\n    contactService.deleteContact(id)\n      .then(newContacts => {\n        console.log('newContacts :>> ', newContacts);\n        setPersons(newContacts.updatedContacts);\n\n        if(newContacts.error === 1){\n          console.log(\"Throwing error text\");\n          const person = persons.find(person => person.id === id )\n          changeMessage(`error, contact ${person.name} is allready deleted from server`, true);\n        } else {\n          console.log(\"Throwing normal text\");\n          changeMessage('Contact deleted', false);\n        }\n      })\n  }\n\n  return (\n    <div>\n      <Header text = {'Phonebook'} />\n      <Filter filter ={newFilter} handleChange={handleFilterChange} />\n      \n      <Message textToDisplay = {errorMessage} redText = {redErrorText}  />\n      \n      <Header text = {'add new name'} />\n      <Form  handleSubmit={handleSubmit} name={newName} handleNameChange={handleNameChange}\n        number={newNumber} handleNumberChange={handleNumberChange} />\n\n      <Header text = {'Numbers'} />\n      <Contacts contactList={persons} personfilter={newFilter.slice()} deleteService ={handleDelete}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}